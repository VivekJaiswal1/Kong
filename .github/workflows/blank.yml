# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Download and run inso cli
        run: |
          # Download inso package from github
          wget https://github.com/Kong/insomnia/releases/download/lib%403.14.0/inso-linux-3.14.0.tar.xz
          
          # Install the dwonloaded package
          tar -xf inso-linux-3.14.0.tar.xz  
          
          # Checking the inso version
          ./inso --version
          
      - name: Validate a spec using Inso
        run: |
          # Linting the spec
          ./inso lint spec Spec/spec.yaml
          
          # Converting spec to Kong Config
          ./inso generate config Spec/spec.yaml -o Deck/deckConfig.yaml
          
          # Output deck yaml
          cat Deck/deckConfig.yaml
      
      - name: Publish spec to dev portal 
        run: |
          # Downloading portal cli
          npm install -g kong-portal-cli
          echo Downloaded
          
          # Clone the template repo with all the files
          git clone https://github.com/kong/kong-portal-templates.git
          echo cloned
          
          # Copy the spec to this template structure
          sudo cp Spec/spec.yaml kong-portal-templates/workspaces/default/specs/spec.yaml
          
          # Publish the spec to dev portal
          KONG_ADMIN_URL=https://52.66.151.195:8444 KONG_ADMIN_TOKEN=password portal deploy -D default --preserve
          
      - name: Download and run deck
        run: |
          # Download deck package from github
          curl -sL https://github.com/kong/deck/releases/download/v1.19.1/deck_1.19.1_linux_amd64.tar.gz -o deck.tar.gz
          
          # Install the downloaded package
          tar -xf deck.tar.gz -C /tmp  
          
          sudo cp /tmp/deck /usr/local/bin/
      
      - name: Convert the spec to version 3
        run: |
          # Convert to v-3
          deck convert --from kong-gateway-2.x --to kong-gateway-3.x --input-file Deck/deckConfig.yaml --output-file Deck3/deckConfig3.yaml --kong-addr "http://65.2.9.170:8001" --headers "kong-admin-token:password" --yes
          
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "jaiswalvivek316@gmail.com"
          git config --local user.name "VivekJaiswal1"
          git add Deck3/deckConfig3.yaml Deck/deckConfig.yaml
          if [-z "$(git status --porcelain)"]; then
             echo "::set-output name=push::false"
          else
             git commit -m "Add changes" -a
             echo "::set-output name=push::true"
          fi
        shell: bash
        
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
